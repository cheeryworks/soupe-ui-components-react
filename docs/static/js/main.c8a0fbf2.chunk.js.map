{"version":3,"sources":["assets/logo.png","pages/Home.tsx","pages/components/Introduction.tsx","pages/components/SelectDemo.tsx","pages/components/TreeDemo.tsx","pages/components/TreeSelectDemo.tsx","pages/components/TableDemo.tsx","pages/Components.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Home","Introduction","SelectDemo","className","aria-haspopup","aria-controls","aria-hidden","id","role","TreeDemo","TreeSelectDemo","TableDemo","Components","match","useRouteMatch","to","url","exact","activeClassName","path","App","aria-label","src","logo","alt","Date","getFullYear","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c8a0fbf2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.b19e7c9b.png\";","import React from 'react'\n\nfunction Home() {\n  return <div></div>\n}\n\nexport default Home\n","import React from 'react'\n\nfunction Introduction() {\n  return <div>Introduction</div>\n}\n\nexport default Introduction\n","import React from 'react'\n\nfunction SelectDemo() {\n  return (\n    <div className='dropdown is-hoverable'>\n      <div className='dropdown-trigger'>\n        <button\n          className='button'\n          aria-haspopup='true'\n          aria-controls='dropdown-menu'\n        >\n          <span>Dropdown button</span>\n          <span className='icon is-small'>\n            <i className='fas fa-angle-down' aria-hidden='true'></i>\n          </span>\n        </button>\n      </div>\n      <div className='dropdown-menu' id='dropdown-menu' role='menu'>\n        <div className='dropdown-content'>\n          <button className='dropdown-item button is-white'>\n            Dropdown item\n          </button>\n          <button className='dropdown-item button is-white'>\n            Other dropdown item\n          </button>\n          <button className='dropdown-item button is-white is-active'>\n            Active dropdown item\n          </button>\n          <button className='dropdown-item button is-white'>\n            Other dropdown item\n          </button>\n          <button className='dropdown-item button is-white'>\n            With a divider\n          </button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default SelectDemo\n","import React from 'react'\n\nfunction TreeDemo() {\n  return <div>Tree</div>\n}\n\nexport default TreeDemo\n","import React from 'react'\n\nfunction TreeSelectDemo() {\n  return <div>TreeSelect</div>\n}\n\nexport default TreeSelectDemo\n","import React from 'react'\n\nfunction TableDemo() {\n  return <div>Table</div>\n}\n\nexport default TableDemo\n","import React from 'react'\nimport { HashRouter, NavLink, Route, Switch, useRouteMatch } from 'react-router-dom'\nimport Introduction from './components/Introduction'\nimport SelectDemo from './components/SelectDemo'\nimport TreeDemo from './components/TreeDemo'\nimport TreeSelectDemo from './components/TreeSelectDemo'\nimport TableDemo from './components/TableDemo'\nimport './Components.scss'\n\nfunction Components() {\n  let match = useRouteMatch()\n\n  return (\n    <HashRouter>\n      <div className='tile hero-body px-0 py-0 soupe-ui-layout-sidebar'>\n        <div className='tile is-vertical is-3 pl-2 pr-1 py-2 hero'>\n          <div className='panel is-primary hero-body px-0 py-0 hero'>\n            <p className='panel-heading hero-head'>Components</p>\n            <div className='hero-body px-0 py-0'>\n              <p className='panel-block'></p>\n              <NavLink\n                className='panel-block'\n                to={ `${ match.url }` }\n                exact\n                activeClassName='is-active'\n              >\n                <span className='panel-icon'>\n                  <i className='fas fa-angle-right' aria-hidden='true'></i>\n                </span>\n                Introduction\n              </NavLink>\n              <NavLink\n                className={ `panel-block` }\n                to={ `${ match.url }/select` }\n                activeClassName='is-active'\n              >\n                <span className='panel-icon'>\n                  <i className='fas fa-angle-right' aria-hidden='true'></i>\n                </span>\n                Select\n              </NavLink>\n              <NavLink\n                className={ `panel-block` }\n                to={ `${ match.url }/tree` }\n                activeClassName='is-active'\n              >\n                <span className='panel-icon'>\n                  <i className='fas fa-angle-right' aria-hidden='true'></i>\n                </span>\n                Tree\n              </NavLink>\n              <NavLink\n                className={ `panel-block` }\n                to={ `${ match.url }/tree-select` }\n                activeClassName='is-active'\n              >\n                <span className='panel-icon'>\n                  <i className='fas fa-angle-right' aria-hidden='true'></i>\n                </span>\n                TreeSelect\n              </NavLink>\n              <NavLink\n                className={ `panel-block` }\n                to={ `${ match.url }/table` }\n                activeClassName='is-active'\n              >\n                <span className='panel-icon'>\n                  <i className='fas fa-angle-right' aria-hidden='true'></i>\n                </span>\n                Table\n              </NavLink>\n              <p className='panel-block'></p>\n            </div>\n          </div>\n        </div>\n        <div className='tile is-9 pl-1 pr-2 py-2 soupe-ui-layout-main-content hero'>\n          <div className='panel hero-body px-2 py-2'>\n            <Switch>\n              <Route path={ `${ match.path }/select` }>\n                <SelectDemo/>\n              </Route>\n              <Route path={ `${ match.path }/tree` }>\n                <TreeDemo/>\n              </Route>\n              <Route path={ `${ match.path }/tree-select` }>\n                <TreeSelectDemo/>\n              </Route>\n              <Route path={ `${ match.path }/table` }>\n                <TableDemo/>\n              </Route>\n              <Route path={ match.path }>\n                <Introduction/>\n              </Route>\n            </Switch>\n          </div>\n        </div>\n      </div>\n    </HashRouter>\n  )\n}\n\nexport default Components\n","import React from 'react'\nimport { HashRouter, NavLink, Route, Switch } from 'react-router-dom'\nimport logo from './assets/logo.png'\nimport './App.scss'\nimport Home from './pages/Home'\nimport Components from './pages/Components'\n\nfunction App() {\n  return (\n    <HashRouter>\n      <div className='hero soupe-ui-layout-container'>\n        <nav\n          className='hero-head navbar soupe-ui-layout-header is-dark'\n          role='navigation'\n          aria-label='main navigation'\n        >\n          <div className='navbar-brand'>\n            <NavLink className='navbar-item' to='/'>\n              <img src={ logo } className='logo' alt=''></img>\n              Soupe UI Components (React)\n            </NavLink>\n          </div>\n          <div className='navbar-menu' id='navbar-menu'>\n            <div className='navbar-start'>\n              <NavLink\n                className='navbar-item'\n                to='/'\n                exact\n                activeClassName='is-active'\n              >\n                Home\n              </NavLink>\n              <NavLink\n                className='navbar-item'\n                to='/components'\n                exact\n                activeClassName='is-active'\n              >\n                Components\n              </NavLink>\n            </div>\n          </div>\n        </nav>\n        <div className='hero-body px-0 py-0 soupe-ui-layout-body hero'>\n          <Switch>\n            <Route path='/components'>\n              <Components/>\n            </Route>\n            <Route path='/'>\n              <Home/>\n            </Route>\n          </Switch>\n        </div>\n        <div className='hero-foot px-1 py-1 soupe-ui-layout-footer'>\n          ©{ new Date().getFullYear() } Beijing CheeryWorks Technology Co., Ltd.\n        </div>\n      </div>\n    </HashRouter>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${ process.env.PUBLIC_URL }/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n  .register(swUrl)\n  .then((registration) => {\n    registration.onupdatefound = () => {\n      const installingWorker = registration.installing\n      if (installingWorker == null) {\n        return\n      }\n      installingWorker.onstatechange = () => {\n        if (installingWorker.state === 'installed') {\n          if (navigator.serviceWorker.controller) {\n            // At this point, the updated precached content has been fetched,\n            // but the previous service worker will still serve the older\n            // content until all client tabs are closed.\n            console.log(\n              'New content is available and will be used when all ' +\n              'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n            )\n\n            // Execute callback\n            if (config && config.onUpdate) {\n              config.onUpdate(registration)\n            }\n          } else {\n            // At this point, everything has been precached.\n            // It's the perfect time to display a\n            // \"Content is cached for offline use.\" message.\n            console.log('Content is cached for offline use.')\n\n            // Execute callback\n            if (config && config.onSuccess) {\n              config.onSuccess(registration)\n            }\n          }\n        }\n      }\n    }\n  })\n  .catch((error) => {\n    console.error('Error during service worker registration:', error)\n  })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n  .then((response) => {\n    // Ensure service worker exists, and that we really are getting a JS file.\n    const contentType = response.headers.get('content-type')\n    if (\n      response.status === 404 ||\n      (contentType != null && contentType.indexOf('javascript') === -1)\n    ) {\n      // No service worker found. Probably a different app. Reload the page.\n      navigator.serviceWorker.ready.then((registration) => {\n        registration.unregister().then(() => {\n          window.location.reload()\n        })\n      })\n    } else {\n      // Service worker found. Proceed as normal.\n      registerValidSW(swUrl, config)\n    }\n  })\n  .catch(() => {\n    console.log(\n      'No internet connection found. App is running in offline mode.'\n    )\n  })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n    .then((registration) => {\n      registration.unregister()\n    })\n    .catch((error) => {\n      console.error(error.message)\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}